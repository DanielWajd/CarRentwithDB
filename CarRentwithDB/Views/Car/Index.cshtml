@using CarRentwithDB.ViewModels
@* @using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Car>
@model IEnumerable<Car>*@
@model CarIndexViewModel


@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860

*@
@{

}
<div class="album py-5 bg-body-tertiary">
    <div class="container">
        <div class="row py-lg-4 position-relative">
            <div class="col-lg-8 mx-auto text-dark text-center">
                <h1>Jakiego auta szukasz?</h1>
                <form class="row g-2 justify-content-center mt-4" role="search" method="get" asp-action="Index" asp-controller="Car">
                    <div class="col-md-3">
                        <input class="form-control me-2" name="makeModel" type="search" placeholder="Wpisz markę i model..." aria-label="Search">
                    </div>
                    <div class="col-md-3">
                        <div class="input-group me-2">
                            <span class="input-group-text bg-white" id="location-btn">
                                <img src="~/img/location.png" alt="Lokalizacja" style="width: 20px; height: 20px;">
                            </span>
                            <input class="form-control" name="city" type="search" placeholder="Szukaj miasta..." aria-label="Search">
                        </div>
                    </div>
                    <div class="col-md-2">
                        <select class="form-control me-2 text-muted" name="type">
                            <option value="">Typ auta</option>
                            @foreach (var carType in Enum.GetValues(typeof(CarRentwithDB.Data.Enum.CarType)))
                            {
                                <option value="@carType">@EnumExtensions.TranslateCarType((CarRentwithDB.Data.Enum.CarType)carType)</option>
                            }
                        </select>
                    </div>
                    <div class="col-md-2">
                        <select class="form-control me-2 text-muted" name="sortOrder">
                            <option value="">Sortuj</option>
                            <option value="PriceAsc">Cena rosnąco</option>
                            <option value="PriceDesc">Cena malejąco</option>
                            <option value="MakeAsc">Marka A-Z</option>
                            <option value="MakeDesc">Marka Z-A</option>
                        </select>
                    </div>
                    <div class="col-md-1 d-grid">
                        <button class="btn btn-success" type="submit">Szukaj</button>
                    </div>
                </form>

            </div>
        </div>
    </div>
    <div class="container shadow p-4 bg-white rounded">
        <div class="row g-3">
            @if (User.IsInRole("employee"))
            {
                <div class="col-12 col-md-4">
                    <div class="card shadow-sm">
                        <img class="card-img-top img-fluid" src="https://us.123rf.com/450wm/ariesticon/ariesticon2006/ariesticon200600197/149275546-plus-ikona-na-bia%C5%82ym-tle-dodaj-ikon%C4%99-plusa-znak-dodawania-medyczna-ikona-plusa.jpg" alt="Card image cap" style="height: 225px; object-fit: cover;">
                        <div class="card-body">
                            <p class="card-text">Dodaj</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <a asp-controller="Car" asp-action="Create" class="btn btn-sm btn-outline-secondary">Dodaj</a>
                                    <a asp-controller="Car" asp-action="GetUnavailableCarsToUpdate" class="btn btn-sm btn-outline-danger">Auta do Aktualizacji</a>
                                    <a asp-controller="Car" asp-action="GetUnavailableCars" class="btn btn-sm btn-outline-danger">Niedostępne Auta</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

            }
            @foreach (var item in Model.Cars)
            {
                <div class="col-12 col-md-4">
                    <div class="card shadow-sm">
                        <img class="card-img-top img-fluid" src="@item.Image" alt="Card image cap" style="height: 225px; object-fit: cover;">
                        <div class="overlay-category" style="position: absolute; top: 0; left: 0; width: 30%; background-color: rgba(0, 0, 0, 0.3); color: white; padding: 5px; text-align: center; border-radius: 4px;">
                            @item.City
                        </div>
                        <div class="card-body">
                            <h5 class="card-title">@($"{item.Make} {item.Model}")</h5>
                            <p class="text-primary fw-bold">Cena: @item.DailyRate PLN / dzień</p>
                            <div class="d-flex justify-content-between align-items-center">
                                <div class="btn-group">
                                    <a asp-controller="Car" asp-action="Details" asp-route-id="@item.CarId" class="btn btn-sm btn-outline-secondary">Podgląd</a>
                                    @if (User.IsInRole("employee"))
                                    {
                                        <a asp-controller="Car" asp-action="Edit" asp-route-id="@item.CarId" class="btn btn-sm btn-outline-secondary">Edytuj</a>
                                        <a asp-controller="Car" asp-action="Delete" asp-route-id="@item.CarId" class="btn btn-sm btn-outline-secondary">Usuń</a>
                                    }
                                </div>
                                <small class="d-block mt-2 text-muted fw-bold">
                                    <span class="badge @(item.IsAvailable ? "bg-success" : "bg-danger")">
                                        @EnumExtensions.TranslateAvailability(item.IsAvailable)
                                    </span>
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            }
            @* <div class="pagination">
            @Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort }))
            </div> *@

        </div>
    </div>
    <div class="d-flex justify-content-end mt-3">
        <nav aria-label="Page navigation">
            <ul class="pagination pagination-sm">
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li>
                <li class="page-item"><a class="page-link" href="#">1</a></li>
                <li class="page-item active" aria-current="page">
                    <span class="page-link">2</span>
                </li>
                <li class="page-item"><a class="page-link" href="#">3</a></li>
                <li class="page-item">
                    <a class="page-link" href="#">Next</a>
                </li>
            </ul>
        </nav>
    </div>
</div>

@* <script src="~/js/location.js"></script> *@